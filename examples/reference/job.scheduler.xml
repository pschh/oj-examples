<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<oddjob id="this">
    <job>
        <folder name=" ">
            <jobs>
                <scheduling:timer id="alarm-clock" name="An Alarm Clock" xmlns:scheduling="http://rgordon.co.uk/oddjob/scheduling">
                    <job>
                        <echo id="alarm" name="The Alarm" text="Wake Up! - it's ${alarm-clock.current.fromDate}"/>
                    </job>
                    <schedule>
                        <schedules:time at="07:00" xmlns:schedules="http://rgordon.co.uk/oddjob/schedules"/>
                    </schedule>
                </scheduling:timer>
                <sequential name="Trigger Example">
                    <jobs>
                        <scheduling:trigger name="Alert Trigger" on="${important}" xmlns:scheduling="http://rgordon.co.uk/oddjob/scheduling">
                            <job>
                                <echo name="Alert" text="Important job has completed!"/>
                            </job>
                        </scheduling:trigger>
                        <folder name="A Folder of Jobs">
                            <jobs>
                                <echo id="important" name="Run Me" text="I'm important"/>
                            </jobs>
                        </folder>
                    </jobs>
                </sequential>
                <scheduling:retry name="File Polling Example" xmlns:scheduling="http://rgordon.co.uk/oddjob/scheduling">
                    <job>
                        <sequential id="look" name="Look for files">
                            <jobs>
                                <exists file="${this.dir}/work/*.foo" id="check" name="Check File Exists"/>
                                <echo name="Echo to Console" text="Found ${check.exists[0]}"/>
                            </jobs>
                        </sequential>
                    </job>
                    <schedule>
                        <schedules:interval interval="00:00:05" xmlns:schedules="http://rgordon.co.uk/oddjob/schedules"/>
                    </schedule>
                </scheduling:retry>
                <parallel id="main" name="Stop Overdue Job">
                    <jobs>
                        <wait id="long-job" name="A Long Running Job"/>
                        <scheduling:timer xmlns:scheduling="http://rgordon.co.uk/oddjob/scheduling">
                            <schedule>
                                <schedules:count count="1" xmlns:schedules="http://rgordon.co.uk/oddjob/schedules">
                                    <refinement>
                                        <schedules:after>
                                            <refinement>
                                                <schedules:interval interval="00:00:10"/>
                                            </refinement>
                                        </schedules:after>
                                    </refinement>
                                </schedules:count>
                            </schedule>
                            <job>
                                <sequential>
                                    <jobs>
                                        <state:if name="If Long Running Job Still Executing" state="EXECUTING" xmlns:state="http://rgordon.co.uk/oddjob/state">
                                            <jobs>
                                                <state:mirror job="${long-job}" name="Mirror State of Long Running Job"/>
                                                <stop async="true" job="${main}" name="Stop Long Running Job"/>
                                            </jobs>
                                        </state:if>
                                    </jobs>
                                </sequential>
                            </job>
                        </scheduling:timer>
                    </jobs>
                </parallel>
            </jobs>
        </folder>
    </job>
</oddjob>
